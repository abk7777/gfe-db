AWSTemplateFormatVersion: "2010-09-09"
Description: "gfe-db build service using AWS Batch"
# Parameters:
Resources:
  gfeDBPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2008-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
      Policies:
        - PolicyName: gfeDBPipelineLogsPolicy
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: "*"
        - PolicyName: gfeDBPipelineBatchExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - batch:SubmitJob
                  - batch:DescribeJobs
                  - batch:TerminateJob
                Resource: "*"
                  # - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:job-definition/*
                  # - !Sub arn:aws:batch:${AWS::Region}:${AWS::AccountId}:job-queue/*
              - Effect: Allow
                Action: 
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: 
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForBatchJobsRule
        # - PolicyName: gfeDBPipelineS3ReadWritePolicy
        #   PolicyDocument:
        #     Version: "2012-10-17"
        #     Statement:
        #       - Effect: Allow
        #         Action: 
        #           - s3:GetObject
        #           - s3:ListBucket
        #           - s3:GetBucketLocation
        #           - s3:GetObjectVersion
        #           - s3:GetLifecycleConfiguration
        #           - s3:PutObject
        #           - s3:PutObjectAcl
        #           - s3:PutLifecycleConfiguration
        #           - s3:DeleteObject
        #         Resource:
        #           - arn:aws:s3:::gfe-db-4498
        #           - arn:aws:s3:::gfe-db-4498/*
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: gfe-db-pipeline
      RoleArn: !GetAtt gfeDBPipelineExecutionRole.Arn #
      DefinitionString: |-
        {
            "StartAt": "BUILD_GFE-DB",
            "States": {
                "BUILD_GFE-DB": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::batch:submitJob.sync",
                    "Parameters": {
                        "JobDefinition": "gfedbBatchJobDefinition",
                        "JobName": "build-gfe-db",
                        "JobQueue": "gfedbBatchProcessingJobQueue",
                        "Parameters.$": "$$.Execution.Input.releases"
                    },
                    "End": true
                }
            }
        }
      LoggingConfiguration: 
        Destinations:
          - CloudWatchLogsLogGroup: 
              LogGroupArn: !GetAtt gfeDBPipelineLogGroup.Arn
        IncludeExecutionData: true
        Level: ALL
  gfeDBPipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: gfe-db-pipeline-execution-logs
# Outputs:

